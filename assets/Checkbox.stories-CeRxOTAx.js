import{j as e}from"./jsx-runtime-CexXSJP5.js";import{r as f}from"./index-BP8_t0zE.js";import{c as h}from"./clsx-B-dksMZM.js";import{L as C}from"./Label-Dj0iuwZQ.js";import{H as m}from"./Hint-BgND6QIn.js";const l=f.forwardRef(({name:o,label:i,required:n,disabled:a,hintText:r,checked:c,labelPosition:u="right",errorMsg:t,variant:d="checkmark",reserveSpaceForError:b,...v},g)=>{const _=!!(b||t||r);return e.jsxs("div",{className:h("ui-checkbox",{"ui-checkbox--disabled":a,"ui-checkbox--square-checked":c&&d==="square","ui-checkbox--checkmark-checked":c&&d==="checkmark"}),children:[e.jsx("div",{className:"ui-checkbox__wrapper",children:e.jsx(C,{text:i,required:n,disabled:a,className:h("ui-checkbox__label",{"ui-checkbox__label--left":u==="left"}),children:e.jsxs("div",{className:"ui-checkbox__input-wrapper",children:[e.jsx("input",{id:o,required:n,disabled:a,checked:c,ref:g,...v,type:"checkbox","aria-hidden":"true"}),e.jsx("div",{className:"ui-checkbox__icon"})]})})}),_&&e.jsxs("div",{className:"ui-checkbox__validation-wrapper",children:[t&&e.jsx(m,{variant:"error",children:t}),!t&&r&&e.jsx(m,{children:r})]})]})});try{l.displayName="Checkbox",l.__docgenInfo={description:"",displayName:"Checkbox",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelPosition:{defaultValue:{value:"right"},description:"",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},variant:{defaultValue:{value:"checkmark"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"checkmark"'},{value:'"square"'}]}},hintText:{defaultValue:null,description:"",name:"hintText",required:!1,type:{name:"string"}},errorMsg:{defaultValue:null,description:"",name:"errorMsg",required:!1,type:{name:"string"}},reserveSpaceForError:{defaultValue:null,description:"",name:"reserveSpaceForError",required:!1,type:{name:"boolean"}}}}}catch{}const N={title:"Components/Checkbox",component:l,args:{label:"Get notified",labelPosition:"right",hintText:"",errorMsg:"",required:!1,disabled:!1,variant:"checkmark",reserveSpaceForError:!1},argTypes:{checked:{control:!1}}},s={render:function(i){const[n,a]=f.useState(!1),r=c=>{const{checked:u}=c.target;a(u)};return e.jsx("div",{children:e.jsx(l,{...i,name:"checkboxExample",checked:n,onChange:r})})}};var p,k,x;s.parameters={...s.parameters,docs:{...(p=s.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: function useCheckbox(args) {
    const [checkedValue, setCheckedValue] = useState(false);
    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
      const {
        checked
      } = e.target;
      setCheckedValue(checked);
    };
    return <div>
        <Checkbox {...args} name="checkboxExample" checked={checkedValue} onChange={handleChange} />
      </div>;
  }
}`,...(x=(k=s.parameters)==null?void 0:k.docs)==null?void 0:x.source}}};const S=["Default"];export{s as Default,S as __namedExportsOrder,N as default};
