import{j as g}from"./jsx-runtime-CexXSJP5.js";import{r as V}from"./index-BP8_t0zE.js";import{u as M,b as j}from"./Form-Cxp3Z12N.js";import{n as R}from"./noop-Bj0g98VJ.js";import"./CheckboxSelect-D0e1C-LW.js";import{S as A}from"./Select-Dl4qDWFA.js";import{A as I}from"./AsyncSelect-KeIbVo3b.js";const h=({name:a,options:q,required:n,defaultOptions:v,reserveSpaceForError:o,loadOptions:r,errorMsg:l,onChange:S=R,placeholder:i,selectRef:x,small:s,...u})=>{const{control:C,setError:d,resetField:E,getFieldState:F}=M(),{field:{value:t,onChange:p,onBlur:_},fieldState:{error:e}}=j({name:a,control:C}),m=(b,y)=>{y.action==="clear"?E(a):(p(b),S(b,y))};V.useImperativeHandle(x,()=>({setValue:p,onBlur:_})),V.useEffect(()=>{l&&d(a,l)},[a,d,l]);const f=(e==null?void 0:e.message)||(e==null?void 0:e.value.message)||(e==null?void 0:e.label.message),c=!F(a).invalid&&!!t;return r?g.jsx(I,{...u,defaultOptions:v,value:t,errorMsg:f,isValid:c,onChange:m,loadOptions:r,reserveSpaceForError:o,placeholder:i,required:n,small:s}):g.jsx(A,{...u,options:q||[],value:t,errorMsg:f,isValid:c,onChange:m,reserveSpaceForError:o,placeholder:i,required:n,small:s})};try{h.displayName="FormSelect",h.__docgenInfo={description:"",displayName:"FormSelect",props:{name:{defaultValue:null,description:"Name of the HTML Input (optional - without this, no input will be rendered)",name:"name",required:!0,type:{name:"string"}},small:{defaultValue:null,description:"",name:"small",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelPosition:{defaultValue:null,description:"",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom"'}]}},labelEndAdornment:{defaultValue:null,description:"",name:"labelEndAdornment",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Marks the value-holding input as required for form validation",name:"required",required:!1,type:{name:"boolean"}},hintText:{defaultValue:null,description:"",name:"hintText",required:!1,type:{name:"string"}},errorMsg:{defaultValue:null,description:"",name:"errorMsg",required:!1,type:{name:"FieldError"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},reserveSpaceForError:{defaultValue:null,description:"",name:"reserveSpaceForError",required:!1,type:{name:"boolean"}},isCreatable:{defaultValue:null,description:"",name:"isCreatable",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Array of options that populate the select menu",name:"options",required:!1,type:{name:"OptionType[]"}},selectRef:{defaultValue:null,description:"",name:"selectRef",required:!1,type:{name:"MutableRefObject<{ setValue?: ((option: ISelectOption) => void); onBlur?: (() => void); }> | undefined"}}}}}catch{}export{h as F};
