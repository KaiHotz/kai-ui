import{j as y}from"./jsx-runtime-CexXSJP5.js";import{r as g}from"./index-BP8_t0zE.js";import{u as F,b as _}from"./Form-Dgq8zOsw.js";import{n as M}from"./noop-Bj0g98VJ.js";import"./CheckboxSelect-CtQt4pWD.js";import{S as j}from"./Select-YRO8NlyY.js";import{A as R}from"./AsyncSelect-CTPfz3bk.js";const h=({name:a,options:q,required:t,defaultOptions:V,reserveSpaceForError:n,loadOptions:o,errorMsg:l,onChange:v=M,placeholder:r,selectRef:x,small:i,...s})=>{const{control:C,setError:u,resetField:E}=F(),{field:{value:d,onChange:p,onBlur:S},fieldState:{error:e}}=_({name:a,control:C}),m=(c,b)=>{b.action==="clear"?E(a):(p(c),v(c,b))};g.useImperativeHandle(x,()=>({setValue:p,onBlur:S})),g.useEffect(()=>{l&&u(a,l)},[a,u,l]);const f=(e==null?void 0:e.message)||(e==null?void 0:e.value.message)||(e==null?void 0:e.label.message);return o?y.jsx(R,{...s,defaultOptions:V,value:d,errorMsg:f,onChange:m,loadOptions:o,reserveSpaceForError:n,placeholder:r,required:t,small:i}):y.jsx(j,{...s,options:q||[],value:d,errorMsg:f,onChange:m,reserveSpaceForError:n,placeholder:r,required:t,small:i})};try{h.displayName="FormSelect",h.__docgenInfo={description:"",displayName:"FormSelect",props:{name:{defaultValue:null,description:"Name of the HTML Input (optional - without this, no input will be rendered)",name:"name",required:!0,type:{name:"string"}},small:{defaultValue:null,description:"",name:"small",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},labelPosition:{defaultValue:null,description:"",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom"'}]}},labelEndAdornment:{defaultValue:null,description:"",name:"labelEndAdornment",required:!1,type:{name:"ReactNode"}},required:{defaultValue:null,description:"Marks the value-holding input as required for form validation",name:"required",required:!1,type:{name:"boolean"}},hintText:{defaultValue:null,description:"",name:"hintText",required:!1,type:{name:"string"}},errorMsg:{defaultValue:null,description:"",name:"errorMsg",required:!1,type:{name:"FieldError"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},reserveSpaceForError:{defaultValue:null,description:"",name:"reserveSpaceForError",required:!1,type:{name:"boolean"}},isCreatable:{defaultValue:null,description:"",name:"isCreatable",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Array of options that populate the select menu",name:"options",required:!1,type:{name:"OptionType[]"}},selectRef:{defaultValue:null,description:"",name:"selectRef",required:!1,type:{name:"MutableRefObject<{ setValue?: ((option: ISelectOption) => void); onBlur?: (() => void); }> | undefined"}}}}}catch{}export{h as F};
